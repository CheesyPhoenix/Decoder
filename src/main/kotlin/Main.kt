fun main(args: Array<String>) {
    var running = true
    while (running){
        println("Decode or encode?")
        var input = readLine()
        if (input != null) {
            if (input == "stop") return
            else if (input == "encode") {println("Write your message, ready to encode"); encode()}
            else if (input == "decode"){
                println("Write your message, ready to decode")
                input = readLine()
                decode(input)
            }
        }
    }
}

var temp = ""

fun encode(){
    var input = readLine()
    if (input != null){
        input = input.replace("\\s".toRegex(), "")
        for (i in input.indices){
            when (input[i].lowercaseChar()){
                'a' -> {
                    decode(
                        "00100" +
                            "01010" +
                            "01110" +
                            "01010" +
                            "01010")
                }
                'b' -> {
                    decode("01100" +
                                "01010" +
                                "01110" +
                                "01010" +
                                "01100")
                }
                'c' -> {
                    decode(
                        "00110" +
                            "01000" +
                            "01000" +
                            "01000" +
                            "00110")
                }
                'd' -> {
                    decode(
                        "01100" +
                            "01010" +
                            "01010" +
                            "01010" +
                            "01110")
                }
                'e' -> {
                    decode(
                        "01110" +
                            "01000" +
                            "01110" +
                            "01000" +
                            "01110")
                }
                'g' -> {
                    decode(
                        "11111" +
                            "10000" +
                            "10111" +
                            "10001" +
                            "11111")
                }
                'f' -> {
                    decode(
                        "01110" +
                            "01000" +
                            "01110" +
                            "01000" +
                            "01000")
                }
                'h' -> {
                    decode(
                        "01010" +
                            "01010" +
                            "01110" +
                            "01010" +
                            "01010")
                }
                'i' -> {
                    decode(
                        "11111" +
                            "00100" +
                            "00100" +
                            "00100" +
                            "11111")
                }
                'j' -> {
                    decode(
                        "00111" +
                            "00010" +
                            "00010" +
                            "01010" +
                            "00100")
                }
                'k' -> {
                    decode(
                        "01010" +
                            "01010" +
                            "01100" +
                            "01010" +
                            "01001")
                }
                'l' -> {
                    decode(
                        "01000" +
                            "01000" +
                            "01000" +
                            "01000" +
                            "01111")
                }
                'm' -> {
                    decode(
                        "10001" +
                            "11011" +
                            "10101" +
                            "11001" +
                            "10001")
                }
                'n' -> {
                    decode(
                        "10001" +
                            "11001" +
                            "10101" +
                            "10011" +
                            "10001")
                }
                'o' -> {
                    decode(
                        "11111" +
                            "10001" +
                            "10001" +
                            "10001" +
                            "11111")
                }
                'p' -> {
                    decode(
                        "11110" +
                            "10001" +
                            "11110" +
                            "10000" +
                            "10000")
                }
                'q' -> {
                    decode(
                        "11111" +
                            "10001" +
                            "10001" +
                            "10011" +
                            "11111")
                }
                'r' -> {
                    decode(
                        "11110" +
                            "10001" +
                            "11110" +
                            "10010" +
                            "10001")
                }
                's' -> {
                    decode(
                        "11111" +
                            "10000" +
                            "11111" +
                            "00001" +
                            "11111")
                }
                't' -> {
                    decode(
                        "11111" +
                            "00100" +
                            "00100" +
                            "00100" +
                            "00100")
                }
                'u' -> {
                    decode(
                        "10001" +
                            "10001" +
                            "10001" +
                            "10001" +
                            "11111")
                }
                'v' -> {
                    decode(
                        "10001" +
                            "10000" +
                            "01010" +
                            "01010" +
                            "00100")
                }
                'w' -> {
                    decode(
                        "10001" +
                            "10001" +
                            "10001" +
                            "10101" +
                            "11011")
                }
                'x' -> {
                    decode(
                        "10001" +
                            "01010" +
                            "00100" +
                            "01010" +
                            "10001")
                }
                'y' -> {
                    decode(
                        "10001" +
                            "01010" +
                            "00100" +
                            "00100" +
                            "00100")
                }
                'z' -> {
                    decode(
                        "11111" +
                            "00010" +
                            "00100" +
                            "01100" +
                            "11111")
                }
                'æ' -> {
                    decode(
                        "01111" +
                            "10100" +
                            "11111" +
                            "10100" +
                            "10111")
                }
                'ø' -> {
                    decode(
                        "11111" +
                            "10011" +
                            "10101" +
                            "11001" +
                            "11111")
                }
                'å' -> {
                    decode(
                        "00100" +
                            "00100" +
                            "01010" +
                            "01110" +
                            "01010")
                }
                '1' -> {
                    decode(
                        "00100" +
                            "01100" +
                            "00100" +
                            "00100" +
                            "01110")
                }
                '2' -> {
                    decode(
                        "01110" +
                            "10001" +
                            "00110" +
                            "01000" +
                            "11111")
                }
                '3' -> {
                    decode(
                        "11111" +
                            "00001" +
                            "00111" +
                            "00001" +
                            "11111")
                }
                '4' -> {
                    decode(
                        "10001" +
                            "10001" +
                            "11111" +
                            "00001" +
                            "00001")
                }
                '5' -> {
                    decode(
                        "01111" +
                            "10000" +
                            "11111" +
                            "00001" +
                            "11111")
                }
                '6' -> {
                    decode(
                        "11111" +
                        "10000" +
                        "11111" +
                        "10001" +
                        "11111")
                }
                '7' -> {
                    decode(
                        "10001" +
                        "10001" +
                        "11111" +
                        "00001" +
                        "00001")
                }
                '8' -> {
                    decode(
                        "11111" +
                            "10001" +
                            "11111" +
                            "10001" +
                            "11111")
                }
                '9' -> {
                    decode(
                        "11111" +
                            "10001" +
                            "11111" +
                            "00001" +
                            "11111"
                    )
                }
                '0' -> {
                    decode(
                        "01110" +
                            "10001" +
                            "10001" +
                            "10001" +
                            "01110"
                    )
                }
            }
        }
        println(temp)
    }
}

fun decode(inp: String?){
    var input = inp
    if (input != null) {
        input = input.replace("\\s".toRegex(), "")
        if (input.length == 25) {
            var i = 0;
            repeat(5) {
                var line = ""
                repeat(5) {
                    line += if (input[i] == '1') {
                        "⬛ "
                    } else {
                        "☐ "
                    }
                    i++
                }
                println(line)
            }
            println()
            temp += input
        }
        else if (input.isNotEmpty() && input.length % 5 == 0){
            var offset = 0
            repeat(input.length / 25){
                var i = offset;
                repeat(5) {
                    var line = ""
                    repeat(5) {
                        line += if (input[i] == '1') {
                            "⬛ "
                        } else {
                            "☐ "
                        }
                        i++
                    }
                    println(line);
                }
                offset += 25
                println()
            }
        }
    }
}